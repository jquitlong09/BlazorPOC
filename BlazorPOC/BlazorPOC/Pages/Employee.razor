@page "/employee/{id}"
@inject BlazorPOC.Data.IEmployeeService EmployeeService
@inject NavigationManager Navigation 


<EditForm Model="employee" OnSubmit="@SubmitForm">
    <div class="form-group">
        <label>Id</label>
        <input id="id" class="form-control" name="id" value="@employee.Id" readonly />
    </div>
    <div class="form-group">
        <label>Name</label>
        <InputText id="name" class="form-control" name="name" @bind-Value="employee.Name"></InputText>
    </div>
    <div class="form-group">
        <label>Country Code</label>
        <InputText id="CountryCode" class="form-control" name="CountryCode" @bind-Value="employee.CountryCode"></InputText>
    </div>
    <div class="form-group">
        <label>Number</label>
        <InputText id="Number" class="form-control" name="Number" @bind-Value="employee.Number"></InputText>
    </div>
    <div class="form-group">
        <label>EmailAddress</label>
        <InputText id="EmailAddress" class="form-control" name="EmailAddress" @bind-Value="employee.EmailAddress"></InputText>
    </div>
    <button type="submit" class=" btn btn-primary">Update</button>
</EditForm>

@code {
    [Parameter]
    public string Id { get; set; }

    private BlazorPOC.Data.Employee employee { get; set; }

    protected override void OnInitialized()
    {
        if (!String.IsNullOrEmpty(Id) & Id == "0")
        {
            employee = new Data.Employee();
        }
        else
        {
            employee = EmployeeService.GetEmployee(Guid.Parse(Id));
        }
    }


    private void SubmitForm()
    {
        if (employee.Id == Guid.Empty)
        {
            EmployeeService.AddEmployee(employee);
        }
        else
        {
            EmployeeService.UpdateEmployee(employee);
        }

        Navigation.NavigateTo("employees");
    }
}
